How did viewing a diff between two versions of a file help you see the bug that was introduced?

It made identifying changes much quicker and easier than scanning the files independently.  
It also allowed me to be more focused on the task of finding the bug. 


How couuld having easy access to the entire history of a file make you a more efficient programmer in the long run

All developers make errors and when multiple developers are working on the same files that becomes more common.
Having previous versions allows you to revert back if something went wrong. 
Also it allows you to see how code evolved over the course of the project as well as being able to identify when and who a feature was implemeted


What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs?

Inconsistency between members of a team on when they commit.
Forgetting to commit when working in a project.
File corruption in between commits


Why do you think some version control systems, like Git, allow saving multiple files with one commit, while others, like Google Docs, treat each file separately

With version control files are tightly coupled with each other and you need to be able to see the coupled files together.  
Multiple file commits goes along with the package of changes vs file changes concept. 
With Google Docs there is no coupling of files. 


How can you use the commands git log and git diff to view the history of the files

Use git log to see all the commits and then take the ids of the changesets to feed git diff


How might using version control make you more confident to make changes that could break something?

If a change breaks something you can simply revert back to a previous version


